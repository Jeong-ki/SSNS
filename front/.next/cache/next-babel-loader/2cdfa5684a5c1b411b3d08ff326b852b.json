{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"/Users/jeong-gisu/Desktop/pinned/dongdong/front/pages/signup.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport styled from 'styled-components';\nimport AppLayout from '../components/Layout/AppLayout';\nimport useInput from '../hooks/useInput';\nvar ErrorMessage = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  color: red;\\n\"])));\n_c = ErrorMessage;\n\nvar Signup = function Signup() {\n  _s();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nickname = _useInput4[0],\n      onChangeNickname = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var _useState = useState(''),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      passwordError = _useState2[0],\n      setPasswordError = _useState2[1];\n\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n\n  var _useState3 = useState(''),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(''),\n      termError = _useState4[0],\n      setTermError = _useState4[1];\n\n  var onChangeTerm = useCallback(function (e) {\n    setTerm(e.target.checked);\n    setTermError(false);\n  });\n  var onSubmit = useCallback(function () {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(id, nickname, password);\n  }, [password, passwordCheck, term]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785 | DongDong\")), __jsx(Form, {\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), passwordError && __jsx(ErrorMessage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"\\uBA38\\uC2DC\\uAE30 \\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(ErrorMessage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\n_s(Signup, \"HbZjpRQfvott0ATazeXCv4p9S0Y=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c2 = Signup;\nexport default Signup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ErrorMessage\");\n$RefreshReg$(_c2, \"Signup\");","map":{"version":3,"sources":["/Users/jeong-gisu/Desktop/pinned/dongdong/front/pages/signup.js"],"names":["React","useCallback","useState","Head","Form","Input","Checkbox","Button","styled","AppLayout","useInput","ErrorMessage","div","Signup","id","onChangeId","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","e","target","value","term","setTerm","termError","setTermError","onChangeTerm","checked","onSubmit","console","log","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport styled from 'styled-components';\nimport AppLayout from '../components/Layout/AppLayout';\nimport useInput from '../hooks/useInput';\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Signup = () => {\n  const [id, onChangeId] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n\n  const [passwordCheck, setPasswordCheck] = useState('');\n  const [passwordError, setPasswordError] = useState(false);\n  const onChangePasswordCheck = useCallback((e) => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n\n  const [term, setTerm] = useState('');\n  const [termError, setTermError] = useState('');\n  const onChangeTerm = useCallback((e) => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  })\n\n  const onSubmit = useCallback(() => {\n    if(password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if(!term) {\n      return setTermError(true);\n    }\n    console.log(id, nickname, password);\n  }, [password, passwordCheck, term]);\n\n  return (\n    <AppLayout>\n      <Head>\n        <title>회원가입 | DongDong</title>\n      </Head>\n      <Form onFinish={onSubmit}>\n        <div>\n          <label htmlFor=\"user-id\">아이디</label>\n          <br />\n          <Input name=\"user-id\" value={id} required onChange={onChangeId} />\n        </div>\n        <div>\n          <label htmlFor=\"user-nick\">닉네임</label>\n          <br />\n          <Input name=\"user-nick\" value={nickname} required onChange={onChangeNickname} />\n        </div>\n        <div>\n          <label htmlFor=\"user-password\">비밀번호</label>\n          <br />\n          <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\n        </div>\n        <div>\n          <label htmlFor=\"user-password-check\">비밀번호체크</label>\n          <br />\n          <Input \n            name=\"user-password-check\" \n            type=\"password\" \n            value={passwordCheck} \n            required\n            onChange={onChangePasswordCheck} \n          />\n          {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>}\n        </div>\n        <div>\n          <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>머시기 약관에 동의합니다.</Checkbox>\n          {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\n        </div>\n        <div style={{ marginTop: 10 }}>\n          <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n        </div>\n      </Form>\n    </AppLayout>\n  )\n};\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}